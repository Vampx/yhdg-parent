<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.yusong.yhdg.appserver.persistence.basic.CustomerCouponTicketMapper">

    <select id="find" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerCouponTicket">
        select
        *
        from bas_customer_coupon_ticket
        where id = #{id}
    </select>

    <select id="findLaxinTicket" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerCouponTicket">
        select * from bas_customer_coupon_ticket
        where customer_mobile = #{customerMobile} and agent_id = #{agentId} and give_type = #{giveType} and status = #{status}
        limit 1
    </select>

    <select id="findList" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerCouponTicket">
        select
        *
        from bas_customer_coupon_ticket
        where customer_mobile = #{mobile}
        and status = #{status} and category = #{category}
        <if test="nowDate != null">
            <![CDATA[and expire_time >= #{nowDate} and begin_time <= #{nowDate}]]>
        </if>
        <if test="agentId!=null">
            and agent_id = #{agentId}
        </if>
        <if test="ticketType!=null">
            and ticket_type = #{ticketType}
        </if>
        ORDER BY expire_time ASC
        <if test="offset!=null and limit!=null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="findCount" resultType="int">
        select
          count(*)
        from bas_customer_coupon_ticket
        where partner_id = #{partnerId}
        and customer_mobile = #{customerMobile}
        and status = #{status} and category = #{category}
    </select>

    <update id="useTicket">
        update bas_customer_coupon_ticket
        set status = #{toStatus},
        use_time = #{useTime}
        where id = #{id} and status = #{fromStatus}
    </update>

    <update id="update">
        update bas_customer_coupon_ticket
        set status = #{toStatus},
        use_time = NULL
        where id = #{id} and status = #{fromStatus}
    </update>

    <update id="setUsed">
         update bas_customer_coupon_ticket
         set status = #{status}, use_time = #{useTime}
         where id = #{id}
     </update>

    <insert id="insert" parameterType="cn.com.yusong.yhdg.common.domain.basic.CustomerCouponTicket" useGeneratedKeys="true" keyProperty="id">
        insert into bas_customer_coupon_ticket(
        partner_id,
        agent_id,
        ticket_name,
        money,
        status,
        category,
        expire_time,
        customer_mobile,
        memo,
        ticket_type,
        give_type,
        source_id,
        source_type,
        begin_time,
        create_time)
        values(
        #{partnerId},
        #{agentId},
        #{ticketName},
        #{money},
        #{status},
        #{category},
        #{expireTime},
        #{customerMobile},
        #{memo},
        #{ticketType},
        #{giveType},
        #{sourceId},
        #{sourceType},
        #{beginTime},
        #{createTime})
    </insert>

</mapper>