<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.yusong.yhdg.agentappserver.persistence.basic.CustomerForegiftOrderMapper">

    <select id="find" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        *
        from bas_customer_foregift_order
        where id = #{id}
    </select>

    <select id="sumMoneyByAgent" resultType="int">
        select ifnull(SUM(money),0) as money
        from  bas_customer_foregift_order
        where agent_id = #{agentId}
        <foreach collection="status" item="item" open=" AND status in (" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findListByCabinetId" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        *
        from bas_customer_foregift_order
        where agent_id = #{agentId}
        <if test="cabinetId != null and cabinetId != ''">
            and cabinet_id = #{cabinetId}
        </if>
        <if test="cabinetId == null">
            and cabinet_id is not null
        </if>
        <if test="beginTime != null and endTime != ''">
            and pay_time >= #{beginTime} and pay_time &lt;= #{endTime}
        </if>
        <if test="keyword != null and keyword != ''">
            and customer_fullname like concat('%', #{keyword} ,'%')
        </if>
        ORDER BY id desc
    </select>

    <select id="findByCabinetId" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        *
        from bas_customer_foregift_order
        where agent_id = #{agentId}
        <if test="cabinetId != null and cabinetId != ''">
            and cabinet_id = #{cabinetId}
        </if>
        <if test="status != null">
            and status in
            <foreach collection="status" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="keyword != null and keyword != ''">
            and customer_fullname like concat('%', #{keyword} ,'%')
        </if>
        ORDER BY create_time desc
        limit #{offset}, #{limit}
    </select>

    <select id="findByForegiftIdAndStatus" parameterType="string" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        *
        from bas_customer_foregift_order
        where foregift_id = #{foregiftId}
        <foreach collection="foregiftList" item="item" open=" AND status in (" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findListByCustomerIdAndStatus" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select *
        from  bas_customer_foregift_order
        where customer_id = #{customerId} and status = #{status}
        order by id DESC
    </select>

    <select id="findIncrement"  resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
          *
        from bas_customer_foregift_order
        WHERE
        agent_id = #{agentId}
        and pay_time &lt;= #{endTime}
        AND pay_time &gt;= #{beginTime}
        limit #{offset}, #{limit}
    </select>

    <select id="findRefund" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
          *
        from bas_customer_foregift_order
        where
        agent_id = #{agentId}
        and refund_time >= #{beginTime}
        and refund_time &lt;= #{endTime}
        limit #{offset}, #{limit}
    </select>

    <select id="countShopTodayOrderNum" resultType="java.lang.Integer">
        select count(*)
        from bas_customer_foregift_order
        where shop_id = #{shopId} and pay_time >= #{startTime} and pay_time &lt;= #{endTime}
    </select>

    <select id="findOneEnabled" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        *
        FROM
        bas_customer_foregift_order
        where customer_id = #{customerId}
        and status = #{status}
        and agent_id = #{agentId}
        order by create_time desc
        limit 1
    </select>

    <select id="findCountByCabinetId"  resultType="int">
        select
        count(id)
        from bas_customer_foregift_order
        <trim prefix="where" prefixOverrides="and">
            <if test="cabinetId != null and cabinetId != '' ">
                and cabinet_id = #{cabinetId}
            </if>
            <if test="agentId != null">
                and agent_id = #{agentId}
            </if>
            <if test="status != null">
                and status in
                <foreach collection="status" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="beginTime != null and endTime != null">
                <![CDATA[and create_time > #{beginTime} and create_time < #{endTime}]]>
            </if>
        </trim>
    </select>

    <update id="refund">
        update bas_customer_foregift_order set
            status = #{toStatus},
            apply_refund_time = #{applyRefundTime},
            refund_time = #{refundTime},
            refund_money = #{refundMoney},
            refund_operator = #{refundOperator}
        where id = #{id} and status = #{fromStatus}
    </update>

    <update id="applyRefund">
        update bas_customer_foregift_order set
            status = #{toStatus},
            apply_refund_time = #{applyRefundTime},
            refund_money = #{refundMoney}
        where id = #{id} and status = #{fromStatus}
    </update>

</mapper>