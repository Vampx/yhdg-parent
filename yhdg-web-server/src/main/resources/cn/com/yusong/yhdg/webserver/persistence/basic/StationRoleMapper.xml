<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.com.yusong.yhdg.webserver.persistence.basic.StationRoleMapper">

    <select id="find" parameterType="int" resultType="cn.com.yusong.yhdg.common.domain.basic.StationRole">
        select
        id,
        role_name as roleName,
        memo,
        station_id as stationId,
        create_time as createTime
        from bas_station_role
        where id = #{id}
    </select>

    <select id="findUnique" resultType="int">
        select count(*) from bas_station_role where role_name = #{roleName}
        <if test="id != null">
            and id != #{id}
        </if>
    </select>

    <select id="findByStationId" parameterType="int" resultType="cn.com.yusong.yhdg.common.domain.basic.StationRole">
        select
        id,
        role_name as roleName,
        memo,
        station_id as stationId,
        create_time as createTime
        from bas_station_role
        <choose>
            <when test="stationId != null and stationId != '' ">
                where station_id = #{stationId}
            </when>
            <otherwise>
                where station_id is null
            </otherwise>
        </choose>
        order by id desc
    </select>

    <select id="findPageCount" parameterType="cn.com.yusong.yhdg.common.domain.basic.StationRole" resultType="int">
        select
        count(bas_station_role.station_id)
        from bas_station_role, hdg_station
        <trim prefix="where" prefixOverrides="and">
            <if test="agentId != null ">
                and hdg_station.agent_id = #{agentId}
            </if>
            <if test="stationId != null and stationId != '' ">
                and bas_station_role.station_id = #{stationId}
            </if>
            <if test="roleName != null and roleName != ''">
                <![CDATA[and role_name LIKE concat('%', #{roleName}, '%')]]>
            </if>
            and bas_station_role.station_id = hdg_station.id
        </trim>
    </select>

    <select id="findPageResult" parameterType="cn.com.yusong.yhdg.common.domain.basic.StationRole" resultType="cn.com.yusong.yhdg.common.domain.basic.StationRole">
        select
        bas_station_role.*
        from bas_station_role, hdg_station
        <trim prefix="where" prefixOverrides="and">
            <if test="agentId != null ">
                and hdg_station.agent_id = #{agentId}
            </if>
            <if test="stationId != null and stationId != '' ">
                and bas_station_role.station_id = #{stationId}
            </if>
            <if test="roleName != null and roleName != ''">
                <![CDATA[and role_name LIKE concat('%', #{roleName}, '%')]]>
            </if>
            and bas_station_role.station_id = hdg_station.id
        </trim>
        order by bas_station_role.create_time desc
        limit #{beginIndex}, #{rows}
    </select>

    <insert id="insert" parameterType="cn.com.yusong.yhdg.common.domain.basic.StationRole" useGeneratedKeys="true" keyProperty="id">
        insert into bas_station_role(station_id, role_name, memo, create_time) values
        (#{stationId}, #{roleName}, #{memo}, #{createTime})
    </insert>

    <update id="update" parameterType="cn.com.yusong.yhdg.common.domain.basic.StationRole">
        update bas_station_role set
        role_name = #{roleName},
        memo = #{memo}
        where id = #{id}
    </update>

    <delete id="delete" parameterType="int">
        delete from bas_station_role where id = #{id}
    </delete>
</mapper>