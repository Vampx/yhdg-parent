<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.yusong.yhdg.webserver.persistence.basic.CustomerForegiftOrderMapper">

    <select id="find" parameterType="String" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        *
        from bas_customer_foregift_order
        where id = #{id}
    </select>

    <select id="sumMoneyByAgent" resultType="int">
        select ifnull(SUM(money),0) as money
        from  bas_customer_foregift_order
        where agent_id = #{agentId}
        <foreach collection="status" item="item" open=" AND status in (" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findByForegiftIdAndStatus" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        *
        from bas_customer_foregift_order
        where foregift_id = #{foregiftId}
        <foreach collection="foregiftList" item="item" open=" AND status in (" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="findPageCount" parameterType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder" resultType="int">
        select
        count(a.id)
        from bas_customer_foregift_order a left join hdg_cabinet b on a.cabinet_id = b.id
        where 1 = 1
        <if test="partnerId != null">
            and a.partner_id = #{partnerId}
        </if>
        <if test="agentId != null">
            and a.agent_id = #{agentId}
        </if>
        <if test="customerFullname != null and customerFullname != ''">
            <![CDATA[ and a.customer_fullname LIKE concat('%', #{customerFullname}, '%')]]>
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            <![CDATA[ and a.customer_mobile LIKE concat(#{customerMobile}, '%')]]>
        </if>
        <if test="id != null and id != ''">
            <![CDATA[ and a.id LIKE concat(#{id}, '%')]]>
        </if>
        <if test="defaultQueryStatus!=null and status == null">
            and a.status != #{defaultQueryStatus}
        </if>
        <if test="defaultQueryStatus == null and status != null">
            and a.status = #{status}
        </if>
        <if test="customerId != null">
             and a.customer_id = #{customerId}
        </if>
        <if test="cabinetId != null and cabinetId != ''">
            <![CDATA[ and a.cabinet_id LIKE concat('%', #{cabinetId}, '%')]]>
        </if>
        <if test="cabinetName != null and cabinetName != ''">
            <![CDATA[ and b.cabinet_name LIKE concat('%', #{cabinetName}, '%')]]>
        </if>
        <if test="queryBeginTime !=null and queryEndTime !=null">
            <![CDATA[and a.create_time BETWEEN  #{queryBeginTime} AND #{queryEndTime} ]]>
        </if>
        <if test="vehicleOrderFlag != null">
            and  a.vehicle_order_flag = #{vehicleOrderFlag}
        </if>
        <if test="vehicleOrderFlag == null">
            and  a.vehicle_order_flag =0
        </if>
    </select>

    <select id="findPageResult" parameterType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder"
            resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select
        a.*, b.cabinet_name as cabinetName
        from bas_customer_foregift_order a left join hdg_cabinet b on a.cabinet_id = b.id
        where 1 = 1
        <if test="partnerId != null">
            and a.partner_id = #{partnerId}
        </if>
        <if test="agentId != null">
            and a.agent_id = #{agentId}
        </if>
        <if test="customerFullname != null and customerFullname != ''">
            <![CDATA[ and a.customer_fullname LIKE concat('%', #{customerFullname}, '%')]]>
        </if>
        <if test="customerMobile != null and customerMobile != ''">
            <![CDATA[ and a.customer_mobile LIKE concat(#{customerMobile}, '%')]]>
        </if>
        <if test="id != null and id != ''">
            <![CDATA[ and a.id LIKE concat(#{id}, '%')]]>
        </if>
        <if test="defaultQueryStatus!=null and status == null">
            and a.status != #{defaultQueryStatus}
        </if>
        <if test="defaultQueryStatus == null and status != null">
            and a.status = #{status}
        </if>
        <if test="customerId != null">
            and a.customer_id = #{customerId}
        </if>
        <if test="cabinetId != null and cabinetId != ''">
            <![CDATA[ and a.cabinet_id LIKE concat('%', #{cabinetId}, '%')]]>
        </if>
        <if test="cabinetName != null and cabinetName != ''">
            <![CDATA[ and b.cabinet_name LIKE concat('%', #{cabinetName}, '%')]]>
        </if>
        <if test="queryBeginTime !=null and queryEndTime !=null">
            <![CDATA[and a.create_time BETWEEN  #{queryBeginTime} AND #{queryEndTime} ]]>
        </if>
        <if test="vehicleOrderFlag != null">
            and  a.vehicle_order_flag = #{vehicleOrderFlag}
        </if>
        <if test="vehicleOrderFlag == null">
            and  a.vehicle_order_flag =0
        </if>
        order by a.id desc
        limit ${beginIndex}, ${rows}
    </select>

    <select id="findListByCustomerId" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select *
        from  bas_customer_foregift_order
        where customer_id = #{customerId} and agent_id = #{agentId}
    </select>

    <select id="findByCustomerIdAndStatus" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select *
        from  bas_customer_foregift_order
        where customer_id = #{customerId}
        and status = #{status}
        limit 1
    </select>

    <select id="findCanRefundByCustomerId" resultType="cn.com.yusong.yhdg.common.domain.basic.CustomerForegiftOrder">
        select *
        from  bas_customer_foregift_order
        where customer_id = #{customerId} and status in (2, 3)
    </select>

    <update id="updateStatus">
        update bas_customer_foregift_order set
        status = #{status},
        refund_money = #{refundMoney},
        refund_operator = #{refundOperator},
        refund_time = #{refundTime},
        refund_photo = #{refundPhoto},
        memo = #{memo},
        handle_time = #{handleTime}
        where id = #{id}
    </update>

    <update id="updateOrder">
        update bas_customer_foregift_order set
        customer_id = #{customerId},
        customer_mobile = #{customerMobile},
        customer_fullname = #{customerFullname},
        pay_type = #{payType},
        create_time = #{createTime}
        where id = #{id}
    </update>

    <update id="updatePayTime">
        update bas_customer_foregift_order
        set pay_time = #{payTime}
        where id = #{id}
    </update>

    <update id="updateRefund">
        update bas_customer_foregift_order
        set status = #{toStatus},
        memo = #{memo},
        apply_refund_time = #{applyRefundTime}
        where id = #{id} and status = #{fromStatus}
    </update>

    <delete id="deleteByCustomerId">
        delete from bas_customer_foregift_order where customer_id = #{customerId}
    </delete>

</mapper>